// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// variant_count_matrix_cpp
Rcpp::NumericMatrix variant_count_matrix_cpp(Rcpp::String bam_path, Rcpp::String seqname, int pos, bool indel, Rcpp::StringVector barcodes);
RcppExport SEXP _RcppPileup_variant_count_matrix_cpp(SEXP bam_pathSEXP, SEXP seqnameSEXP, SEXP posSEXP, SEXP indelSEXP, SEXP barcodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type bam_path(bam_pathSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type seqname(seqnameSEXP);
    Rcpp::traits::input_parameter< int >::type pos(posSEXP);
    Rcpp::traits::input_parameter< bool >::type indel(indelSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type barcodes(barcodesSEXP);
    rcpp_result_gen = Rcpp::wrap(variant_count_matrix_cpp(bam_path, seqname, pos, indel, barcodes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppPileup_variant_count_matrix_cpp", (DL_FUNC) &_RcppPileup_variant_count_matrix_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppPileup(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
